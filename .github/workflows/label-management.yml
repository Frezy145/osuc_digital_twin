name: Label Management

on:
  issues:
    types: [opened, labeled, unlabeled]
  pull_request:
    types: [opened, labeled, unlabeled]

jobs:
  manage-labels:
    runs-on: ubuntu-latest
    
    steps:
    - name: Add helpful labels to new issues
      if: github.event_name == 'issues' && github.event.action == 'opened'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          const title = issue.title.toLowerCase();
          const body = issue.body.toLowerCase();
          
          const labelsToAdd = [];
          
          // Auto-label based on title/content
          if (title.includes('bug') || title.includes('error') || title.includes('broken')) {
            labelsToAdd.push('bug');
          }
          
          if (title.includes('feature') || title.includes('enhancement') || body.includes('new feature')) {
            labelsToAdd.push('enhancement');
          }
          
          if (title.includes('doc') || body.includes('documentation')) {
            labelsToAdd.push('documentation');
          }
          
          if (title.includes('question') || title.includes('help')) {
            labelsToAdd.push('question');
          }
          
          // Check if it might be a good first issue
          const goodFirstIssueKeywords = [
            'simple', 'easy', 'beginner', 'starter', 'first time',
            'getting started', 'minor fix', 'typo', 'small change'
          ];
          
          const isGoodFirstIssue = goodFirstIssueKeywords.some(keyword => 
            title.includes(keyword) || body.includes(keyword)
          );
          
          if (isGoodFirstIssue) {
            labelsToAdd.push('good first issue');
          }
          
          // Add labels if any were identified
          if (labelsToAdd.length > 0) {
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labelsToAdd
            });
          }

    - name: Comment on good first issues
      if: github.event_name == 'issues' && github.event.action == 'labeled' && contains(github.event.label.name, 'good first issue')
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üéâ Good First Issue!

This issue has been marked as a **good first issue**, making it perfect for newcomers to the project!

### For New Contributors:
- This issue is designed to be approachable for first-time contributors
- Feel free to ask questions if anything is unclear
- Comment below to let us know you're working on it
- Check out our [Contributing Guide](CONTRIBUTING.md) for help getting started

### Getting Started:
1. Fork the repository
2. Create a branch: \`git checkout -b fix-issue-${context.issue.number}\`
3. Make your changes
4. Submit a pull request

Need help? Join our [Discussions](https://github.com/${context.repo.owner}/${context.repo.repo}/discussions) or ask questions right here!

Thank you for contributing to OSUC Digital Twin Project! üöÄ`
          });

    - name: Notify about help wanted
      if: github.event_name == 'issues' && github.event.action == 'labeled' && contains(github.event.label.name, 'help wanted')
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üÜò Help Wanted!

This issue is looking for contributors! If you're interested in helping out:

- Comment below to express interest
- Ask questions if you need clarification
- Check if someone is already working on it
- Follow our [contribution workflow](CONTRIBUTING.md#pull-request-process)

Your contribution would be greatly appreciated! üôè`
          });